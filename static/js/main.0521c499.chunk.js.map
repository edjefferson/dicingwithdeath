{"version":3,"sources":["images/logo.svg","components/startScreen.jsx","components/endScreen.jsx","components/Square.jsx","images/p1-min.png","images/p2-min.png","components/Token.jsx","components/Ladder.jsx","components/Snake.jsx","components/Board.jsx","images/d1-250-min.png","images/d2-250-min.png","images/d3-250-min.png","images/d4-250-min.png","images/d5-250-min.png","images/d6-250-min.png","components/Die.jsx","components/MessageBox.jsx","sounds/diesfx.mp3","sounds/slide1.mp3","sounds/slide2.mp3","sounds/slide3.mp3","sounds/slide4.mp3","sounds/up.mp3","sounds/down.mp3","sounds/applause.mp3","components/gameScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["StartScreen","props","startGame","messagePool","className","id","String","introMessages","split","map","p","i","trim","length","onClick","style","marginTop","width","zIndex","backgroundImage","logo","backgroundRepeat","backgroundPosition","EndScreen","restartGame","outroMessages","display","justifyContent","flexDirection","alignItems","fontSize","border","paddingLeft","paddingRight","Square","zoomLevel","squareCoords","squareNo","bgColor","image","height","position","top","y","left","x","boxSizing","backgroundColor","window","location","href","backgroundSize","Token","resizing","boardDimensions","tokenNo","opPosition","transition","src","p2","p1","alt","Ladder","startPos","endPos","Math","sqrt","marginLeft","transformOrigin","transform","atan","PI","objectFit","Snake","Board","rollagains","dimensions","setResizing","tokenSquares","ladders","snakes","currentPlayer","Array","s","floor","reverse","checkForSquareImage","square","viewY","viewX","overflow","e","f","j","Object","keys","slimage","l","n","Die","player","disabled","handleDieClick","number","faces","1","d1","2","d2","3","d3","4","d4","5","d5","6","d6","useEffect","forEach","d","newImage","Image","undefined","color","dieColor","MessageBox","clearMessage","message","colour","winner","fontWeight","textAlign","marginBottom","GameScreen","useSound","dieSfx","dieSound","slide1","slideSound1","slide2","slideSound2","slide3","slideSound3","slide4","slideSound4","up","upSound","down","downSound","applause","applauseSound","slideSounds","setConfetti","soundOn","boardState","setBoardState","playerCount","setTokenSquares","dieEnabled","setDieEnabled","lastRoll","setLastRoll","setCurrentPlayer","setMessage","setDimensions","firstResize","setFirstResize","setGameState","clearResizingTimer","handleResize","clearTimeout","document","querySelector","clientWidth","clientHeight","setTimeout","addEventListener","removeEventListener","roll","interval","setInterval","ceil","random","sound","clearInterval","updateTokenSquare","newSquare","newTokens","endTurn","endSquare","delay","turnMessage","text","rollagain","console","log","targetPos","newPos","order","push","o","moveToken","parse","require","App","useWindowSize","useState","confetti","gameState","setMessagePool","setSnakes","setLadders","setRollagains","setPlayerCount","setSoundOn","messages","parser","delimiter","on","record","read","type","err","error","fetch","then","response","csvdata","data","write","loadMessageData","end","randomColor","colors","randomMessageArray","array","temp","a","ladderColors","ladderMessageSet","ladderMessages","10","14","22","28","31","snakeColors","snakeMessageSet","snakeMessages","7","13","20","27","29","37","38","rollagainMessageSet","rollagainMessages","8","12","17","opacity","displayGameState","VolumeUp","VolumeOff","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0521c499.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c1ccbc7f.svg\";","\nimport ReactMarkdown from 'react-markdown'\nimport logo from './../images/logo.svg'\n \nfunction StartScreen (props) {\n\n  const {startGame,messagePool} = props\n\n  \n\n  return (\n   <> \n   <h1 className=\"title\">DICING WITH DEATH</h1>\n   <div id=\"instructions\" >\n\n\n   <p className=\"instructionsTitle\">INSTRUCTIONS</p>\n   {String(messagePool.introMessages[0][0]).split(\"<<\").map ( (p, i) =>\n  p.trim().length > 0 ? <span key={i} className=\"intro\">\n    \n    \n    \n    <ReactMarkdown>{p}</ReactMarkdown>\n    \n    </span> :  <p key={i} className=\"spacer\"></p>)\n}\n</div>\n\n\n    <div className=\"startButtons\" >\n    <div className=\"startButton\" onClick={() => startGame(2)}  >\n      \n      <span>PLAY WITH 2 PEOPLE</span>\n      \n      </div>\n      \n      <div className=\"startButton\" onClick={() => startGame(1)}  >\n      \n      <span>PLAY WITH COMPUTER</span>\n      \n      </div>\n      </div>\n      \n      <div id=\"logo\" style={{\n   marginTop: \"0.5em\",\n   width: \"100%\",\n   zIndex: -1,\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }}></div>\n  \n  </>\n   \n  )\n}\n\nexport default StartScreen","import ReactMarkdown from 'react-markdown'\nimport logo from './../images/logo.svg'\n\nfunction EndScreen (props) {\n\n  const {messagePool, restartGame} = props\n\n  \n\n  return (\n   <>\n       <h1>DICING WITH DEATH</h1>\n\n   {String(messagePool.outroMessages[0][0]).split(\"<<\").map ( p =>\n  p.trim().length > 0 ? <span>\n  \n    <ReactMarkdown>{p}</ReactMarkdown>\n\n  \n  </span> : <p className=\"spacer\"></p>)\n}\n   \n   <div onClick={restartGame} style={{ \n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      marginTop: \"5em\",\n      fontSize: \"3em\",\n      border: \"5px black solid\",\n      paddingLeft: \"0.5em\",\n      paddingRight: \"0.5em\"\n\n    }} ><span>RESTART</span></div>\n    \n    <div id=\"logo\" style={{\n   marginTop: \"0.5em\",\n   width: \"100%\",\n   zIndex: -1,\n    backgroundImage: `url(${logo})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  }}></div>\n    </>\n   \n  )\n}\n\nexport default EndScreen","const Square = (props) => {\n\n  const {zoomLevel, squareCoords, squareNo, bgColor, image} = props\n\n  return (\n    <div className=\"square\" style={{\n      width: \"20%\",\n      height: \"12.5%\",\n      position: \"absolute\",\n      top: 100 * squareCoords.y * 60/480 + \"%\",\n      left:  100 * squareCoords.x * 60/300 + \"%\",\n      boxSizing: \"border-box\",\n      border: \"2px solid black\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      fontSize: zoomLevel * 1 + \"em\",\n      backgroundColor: bgColor,\n      backgroundImage: `url(${window.location.href + `/images/${image}.png`})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"bottom right\",\n    backgroundSize: \"50% 50%\",\n    }}>\n  \n      <span className=\"squareno\">{squareNo + 1}</span>\n\n    </div>\n  );\n}\n\nexport default Square;\n","export default __webpack_public_path__ + \"static/media/p1-min.d14d5897.png\";","export default __webpack_public_path__ + \"static/media/p2-min.bf6abd3f.png\";","import p1 from './../images/p1-min.png'\nimport p2 from './../images/p2-min.png'\n\n\nconst Token = (props) => {\n  const {resizing,boardDimensions, tokenNo, opPosition, position, zoomLevel} = props\n\n\n\n  return (\n    <div className=\"token\" style={{\n      width: boardDimensions.width/10 * zoomLevel,\n      height: boardDimensions.height/16 * zoomLevel,\n\n      position: \"absolute\",\n      transition: resizing ? \"none\" : \"all 0.5s linear\",\n      top: (zoomLevel * boardDimensions.height/8 * 0.1) + zoomLevel * (tokenNo === 2 && opPosition === position ? position.y * boardDimensions.height/8 + boardDimensions.height/100 : position.y * boardDimensions.height/8),\n      left: (zoomLevel * boardDimensions.width/5 * 0.1) + zoomLevel * (tokenNo === 2 && opPosition === position ? position.x * boardDimensions.width/5 + boardDimensions.height/25: position.x * boardDimensions.width/5),\n    }}>\n      <img style={{\n        width: \"80%\"\n      }}\n      src={tokenNo === 2 ? p2 : p1} alt=\"\" />\n    </div>\n  );\n}\n\nexport default Token;\n","const Ladder = (props) => {\n  const {image, boardDimensions, startPos, endPos, zoomLevel} = props\n\n  return (\n    <div className=\"ladder\" style={{\n      width: 100*(boardDimensions.width/5 - boardDimensions.width/120)/boardDimensions.width + \"%\",\n      height: Math.sqrt((startPos.y - endPos.y)**2 + (startPos.x - endPos.x)**2)*100*(boardDimensions.height/8)/boardDimensions.height + \"%\",\n      \n      marginLeft:  (17.5 * boardDimensions.width/5 )/boardDimensions.width + \"%\",\n      position: \"absolute\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      top: endPos.y * 100 * (boardDimensions.height/8)/boardDimensions.height + \"%\",\n      left: endPos.x * 100 * (boardDimensions.width/5)/boardDimensions.width + \"%\",\n      transformOrigin: \"top center\",\n      transform: \"translate(0,\"+ boardDimensions.width/10 * zoomLevel + \"px) rotate(\"+ Math.atan((-startPos.x + endPos.x)/( startPos.y - endPos.y)) *180/Math.PI+\"deg)\"\n      }}>\n<img style={{height: \"100%\", objectFit: \"contain\",\nzIndex: 10}} src={window.location.href + `images/${image}.png`} alt=\"\"/>\n  \n\n    </div>\n  );\n}\n\nexport default Ladder;\n","const Snake = (props) => {\n  const {boardDimensions, image, startPos, endPos, zoomLevel} = props\n\n\n  return (\n    <div className=\"snake\" style={{\n      width: 100*(boardDimensions.width/5 - boardDimensions.width/120)/boardDimensions.width + \"%\",\n      height: Math.sqrt((startPos.y - endPos.y)**2 + (startPos.x - endPos.x)**2)*100*(boardDimensions.height/8)/boardDimensions.height + \"%\",\n     \n      position: \"absolute\",\n      display: \"flex\",\n      marginLeft:  (20 * boardDimensions.width/5 )/boardDimensions.width + \"%\",\n\n      flexDirection: \"column\",\n      top: endPos.y * 100 * (boardDimensions.height/8)/boardDimensions.height + \"%\",\n      left: endPos.x * 100 * (boardDimensions.width/5)/boardDimensions.width + \"%\",\n      transformOrigin: \"top center\",\n      transform: \"translate(0,\"+ boardDimensions.width/10 * zoomLevel + \"px) rotate(\"+ Math.atan((-startPos.x + endPos.x)/( startPos.y - endPos.y)) *180/Math.PI+\"deg)\"\n      }}>\n\n\n \n<img style={{height: \"100%\", objectFit: \"contain\",\nzIndex: 10}} src={window.location.href + `images/${image}.png` } alt=\"\"/>\n\n\n    </div>\n  );\n}\n\nexport default Snake;","\nimport Square from './Square'\nimport Token from './Token'\nimport Ladder from './Ladder'\nimport Snake from './Snake'\n\nconst Board = (props) => {\n\n  const {rollagains, dimensions, resizing, setResizing, tokenSquares, ladders, snakes, currentPlayer} = props\n  \n\n  const squareCoords = [...Array(40)].map((s, i) => {\n    let x\n    let y = Math.floor(i/5)\n    if (Math.floor(i/5) % 2) {\n      x = 4 - i % 5\n    } else {\n      x =  (i % 5)\n    }\n    return {x: x, y: y}\n\n  }\n  ).reverse()\n\n  let zoomLevel = 1\n  const boardDimensions = {\n    width: 600,\n    height: 600 * 1.6\n  }\n  const viewX = (zoomLevel) => {\n    let x = zoomLevel * ( (squareCoords[tokenSquares[currentPlayer]].x * boardDimensions.width/5) ) - boardDimensions.width/2\n    if (x <= 0) {\n      return 0\n    } else\n    if (x <= boardDimensions.width - dimensions.width ) {\n      return boardDimensions.width - dimensions.width\n    } else {\n      return (x - dimensions.width + boardDimensions.width )\n    }\n  }\n  const viewY = (zoomLevel) => {\n    let x = zoomLevel * ( (squareCoords[tokenSquares[currentPlayer]].y * boardDimensions.height/8) ) - boardDimensions.height/2\n    return x + (boardDimensions.height - dimensions.height)/2\n  \n    \n  }\n\n  const checkForSquareImage = (square) => {\n    if (rollagains[square]){\n      return rollagains[square][1].image + \"-100-min\"\n    } else\n    if (ladders[square]){\n      return ladders[square][2].image + \"-100-min\"\n    } else\n    if (snakes[square]){\n      return snakes[square][2].image + \"-100-min\"\n    } \n    else {\n      return \"\"\n    }\n  }\n\n  const checkForBgColor = (square) => {\n    if (rollagains[square]){\n      return \"lightblue\"\n    } else\n    if (ladders[square]){\n      return \"lightgreen\"\n    } else\n    if (snakes[square]){\n      return \"lightsalmon\"\n    } \n    else {\n      return \"white\"\n    }\n  }\n\n  return (\n    <div className=\"boardViewport\">\n      <div className=\"board\" style={{\n        width: 600 * zoomLevel + \"px\",\n        height: 600 * 1.6 * zoomLevel + \"px\",\n        top: -viewY(zoomLevel),\n        left: -viewX(zoomLevel)  ,\n        backgroundColor: \"black\",\n        transition: resizing ? \"none\" : \"all 0.5s ease-in-out\",\n        position: \"absolute\",\n        overflow: 'hidden'\n      }}>\n      {[...Array(5)].map((e, i) =>\n      \n      [...Array(8)].map((f, j) =>\n      \n      <Square bgColor={checkForBgColor(i*8 + j + 1)} image={checkForSquareImage(i*8 + j + 1)} boardDimensions={boardDimensions} zoomLevel={zoomLevel} squareCoords={squareCoords[i*8 + j]} key={i*5 + j} squareNo={i*8 + j}/>)\n      \n      )\n      }\n   \n      {Object.keys(snakes).map((s,i) => squareCoords[s-1] && squareCoords[snakes[s][0]-1] ? <Snake boardDimensions={boardDimensions} zoomLevel={zoomLevel} key={i} image={snakes[s][2].slimage} endPos={squareCoords[s-1]} startPos={squareCoords[snakes[s][0]-1]}/> : \"\") }\n      {Object.keys(ladders).map((l,i) => squareCoords[l-1] && squareCoords[ladders[l][0]-1] ? <Ladder boardDimensions={boardDimensions} zoomLevel={zoomLevel} key={i} image={ladders[l][2].slimage} startPos={squareCoords[l-1]} endPos={squareCoords[ladders[l][0]-1]}/> : \"\") }\n      \n      {[1,0].map(n => \n        <Token key={n} resizing={resizing} setResizing={setResizing} boardDimensions={boardDimensions} zoomLevel={zoomLevel} tokenNo={n+1} opPosition={squareCoords[tokenSquares[n ? 0 : 1]]}  position={squareCoords[tokenSquares[n]]}   />\n      )}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","export default __webpack_public_path__ + \"static/media/d1-250-min.63f4f4c7.png\";","export default __webpack_public_path__ + \"static/media/d2-250-min.bb9831f1.png\";","export default __webpack_public_path__ + \"static/media/d3-250-min.e6a8930a.png\";","export default __webpack_public_path__ + \"static/media/d4-250-min.d4ef404a.png\";","export default __webpack_public_path__ + \"static/media/d5-250-min.78a2e630.png\";","export default __webpack_public_path__ + \"static/media/d6-250-min.37f21c63.png\";","import { useEffect } from 'react'\n\nimport d1 from './../images/d1-250-min.png'\nimport d2 from './../images/d2-250-min.png'\nimport d3 from './../images/d3-250-min.png'\nimport d4 from './../images/d4-250-min.png'\nimport d5 from './../images/d5-250-min.png'\nimport d6 from './../images/d6-250-min.png'\n\n\nconst Die = (props) => {\n\n  const {player, currentPlayer, disabled, handleDieClick, number} = props\n  \n  const faces = {\n    1: d1,\n    2: d2,\n    3: d3,\n    4: d4,\n    5: d5,\n    6: d6\n  }\n\n  useEffect(() => {\n    [d1,d2,d3,d4,d5,d6].forEach(d => {\n      const newImage = new Image();\n      newImage.src = d;\n      window[d] = newImage;\n    })\n  \n  },[])\n\n  const dieColor = (player, disabled) => {\n    if (disabled) {\n      return \"white\"\n    } else\n    if (player) {\n      return \"red\"\n    } else {\n      return \"yellow\"\n    }\n  }\n\n  \n  return (\n    <div onClick={!disabled ? handleDieClick : undefined} className=\"die\" style={{\n      width: 80,\n      marginTop: 10,\n      height: 80,\n      color: dieColor(player,disabled),\n      position: \"relative\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}>\n\n      {currentPlayer === player ? \n       <img style={{\n        width: \"100%\"\n      }} src={faces[number]} alt=\"\" /> :  <span  style={{\n        position: \"absolute\",\n        left:\"12.5%\",\n        top: \"35%\",\n        width: \"75%\",\n      }}>\n  WAIT\n\n      </span>\n    }\n      <span  style={{\n        position: \"absolute\",\n        left:\"12.5%\",\n        top: \"35%\",\n        width: \"75%\",\n        backgroundColor:'rgba(0,0,0,0.8)'\n      }}>\n\n        { disabled ? \"\" : \n        \n        (\"ROLL\")\n        }\n\n      </span>\n    </div>\n  );\n}\n\nexport default Die;\n","const MessageBox = (props) => {\n\n  const {clearMessage,message,colour,image,winner} = props\n  \n  \n  return (\n    <div className=\"messageBox\" style={{\n      width: 230,\n      marginTop: 75,\n      height: \"auto\",\n      top: 70,\n      display: message ? \"flex\" : \"none\",\n      border: \"10px powderblue solid\",\n      backgroundColor: colour,\n      paddingLeft: 10,\n      paddingRight: 10,\n      fontWeight: 600,\n      textAlign: \"center\",\n      color:\"white\",\n      position: \"absolute\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      zIndex: 100\n    }}\n    onClick={() => clearMessage(winner)}\n    >\n     {image ? <img style={{width: \"50%\",\n      objectFit: \"contain\",\n    marginTop: \"0.5em\", marginBottom: \"0.5em\"}} src={window.location.href + `images/${image}-250-min.png`}  alt=\"\" /> : \"\"}\n      <span>{message}</span>\n      <div className=\"continue\">CONTINUE</div>\n    </div>\n  );\n}\n\nexport default MessageBox;\n","export default __webpack_public_path__ + \"static/media/diesfx.46935df9.mp3\";","export default __webpack_public_path__ + \"static/media/slide1.286dfdec.mp3\";","export default __webpack_public_path__ + \"static/media/slide2.d167c7d8.mp3\";","export default __webpack_public_path__ + \"static/media/slide3.caf961fe.mp3\";","export default __webpack_public_path__ + \"static/media/slide4.bc928674.mp3\";","export default __webpack_public_path__ + \"static/media/up.552af750.mp3\";","export default __webpack_public_path__ + \"static/media/down.bec0ced8.mp3\";","export default __webpack_public_path__ + \"static/media/applause.1939815c.mp3\";","import Board from \"./Board\"\nimport Die from \"./Die\"\nimport MessageBox from \"./MessageBox\"\n\nimport useSound from 'use-sound';\nimport dieSfx from './../sounds/diesfx.mp3';\nimport slide1 from './../sounds/slide1.mp3';\nimport slide2 from './../sounds/slide2.mp3';\nimport slide3 from './../sounds/slide3.mp3';\nimport slide4 from './../sounds/slide4.mp3';\nimport up from './../sounds/up.mp3';\nimport down from './../sounds/down.mp3';\n\nimport applause from './../sounds/applause.mp3';\n\n\nimport { useEffect } from 'react'\n\nconst GameScreen = (props) => {\n  const [dieSound] = useSound(dieSfx);\n  const [slideSound1] = useSound(slide1);\n  const [slideSound2] = useSound(slide2);\n  const [slideSound3] = useSound(slide3);\n  const [slideSound4] = useSound(slide4);\n  const [upSound] = useSound(up);\n  const [downSound] = useSound(down);\n  const [applauseSound] = useSound(applause);\n\n  const slideSounds = [slideSound1,slideSound2,slideSound3,slideSound4]\n  const {\n    setConfetti,\n    soundOn,\n    ladders,\n    snakes,\n    rollagains,\n    boardState,\n    setBoardState,\n    playerCount,\n    tokenSquares,\n    setTokenSquares,\n    dieEnabled,\n    setDieEnabled,\n    lastRoll,\n    setLastRoll,\n    currentPlayer,\n    setCurrentPlayer,\n    message,\n    setMessage,\n    resizing,\n    setResizing,\n    dimensions,\n    setDimensions,\n    firstResize,\n    setFirstResize,\n    setGameState\n  } = props\n\n  const rollDie = () => Math.ceil(Math.random()*6)\n\n\n  useEffect(() => {\n    let clearResizingTimer = false\n    const handleResize = () => {\n      clearTimeout(clearResizingTimer);\n      \n      if (!resizing) setResizing(true)\n      if (document.querySelector('.boardViewport')) {\n        setDimensions({\n          width: document.querySelector('.boardViewport').clientWidth,\n          height: document.querySelector('.boardViewport').clientHeight,\n        });\n      }\n      clearResizingTimer = setTimeout(()=>setResizing(false), 100);\n    }\n    if (!firstResize) {\n      handleResize()\n      setFirstResize(true)\n    } \n\n    window.addEventListener(\"load\", handleResize, false);\n\n    window.addEventListener(\"resize\", handleResize, false);\n    return () => {\n      window.removeEventListener(\"load\", handleResize, false);\n\n      window.removeEventListener(\"resize\", handleResize, false);\n    }\n  },[dimensions,resizing,setResizing, firstResize,setDimensions,setFirstResize])\n\n  \n\n\n\n  \n\n  \n\n\n  \n\n  \n  const clearMessage = (winner) => {\n    if (winner) {\n      setConfetti(false)\n      setGameState(2)\n    } else {\n      setMessage({})\n      if (playerCount === 1 && ((!message.rollagain && currentPlayer === 0) || (message.rollagain && currentPlayer === 1) )){\n        setTimeout(() => handleDieClick(), 100)\n      } else {\n        setDieEnabled(true);\n      }\n      if (!message.rollagain) {\n        setCurrentPlayer(currentPlayer ? 0 : 1);\n      }\n    }\n  }\n\n\n  const handleDieClick = () => {\n    setDieEnabled(false)\n    if (soundOn) dieSound()\n\n    let i = 0\n    let roll\n    let interval = setInterval(() => {\n      if (i < 5) {\n        roll = rollDie()\n        setLastRoll(roll)\n        i+=1\n      } else {\n        setBoardState(1)\n        if (soundOn) {\n          let sound = slideSounds[Math.floor(Math.random() * 4)]\n          setTimeout(sound,10)\n        }\n        clearInterval(interval)\n      }\n    },100)\n    \n  }\n   useEffect(() => {\n\n    const updateTokenSquare = (player,newSquare) => {\n      let newTokens = [...tokenSquares]\n      newTokens[player] = newSquare\n      setTokenSquares(newTokens)\n    }\n\n    const moveToken = (roll) => {\n      let targetPos = tokenSquares[currentPlayer] + roll\n      let newPos = tokenSquares[currentPlayer]\n      let order = []\n\n      if (targetPos > 39) targetPos = 39\n      while (targetPos !== newPos) {\n        let sameLevel = Math.ceil((targetPos + 1) /5) === Math.ceil((newPos + 1) /5)\n        if (sameLevel) {\n          newPos = targetPos\n        } else\n        if (newPos % 5 === 4) {\n          newPos += 1\n        } else {\n          newPos = 5 * (Math.ceil((newPos+1)/5)) - 1\n        }\n      \n        if (newPos <= 39) order.push(newPos)\n      }\n  \n \n      order.push(newPos)\n  \n      order.forEach((o,i)=>  setTimeout(() => updateTokenSquare(currentPlayer,o),i * 500))\n      setTimeout(() => endTurn(order[order.length-1]), order.length * 500)\n  \n    }\n\n    const endTurn = (endSquare) => {\n      let delay = 500\n      let turnMessage = false\n      if (endSquare === 39) {\n        setConfetti(true)\n        if (soundOn) setTimeout(applauseSound,100)\n        turnMessage = {\n          winner: currentPlayer + 1,\n          text: `Player ${currentPlayer + 1} won!`,\n          colour:\"rgba(0, 0, 255, 0.7)\",\n          rollagain: false\n        }\n      } else\n      if (ladders[endSquare+1]) {\n        if (soundOn) setTimeout(upSound,50)\n        updateTokenSquare(currentPlayer,ladders[endSquare+1][0]-1)\n        turnMessage = ladders[endSquare+1][2]\n      } else\n      if (snakes[endSquare+1]) {\n        if (soundOn) setTimeout(downSound,50)\n        updateTokenSquare(currentPlayer,snakes[endSquare+1][0]-1)\n        turnMessage = snakes[endSquare+1][2]\n      } else \n      if (rollagains[endSquare + 1]) {\n        console.log(rollagains[endSquare+1])\n        turnMessage = rollagains[endSquare+1][1]\n        turnMessage.rollagain = true\n        delay = 0\n      } else {\n        delay = 0\n      }\n      setTimeout(() => {\n        if (turnMessage) {\n          setMessage(turnMessage)\n        } else\n        if (currentPlayer === 0 && playerCount === 1){\n          setTimeout(() => handleDieClick(), 100)\n          setCurrentPlayer(currentPlayer ? 0 : 1);\n\n        } else {\n          setDieEnabled(true);\n          setCurrentPlayer(currentPlayer ? 0 : 1);\n        }\n        setBoardState(0)\n      },delay)\n    }\n\n    if (boardState === 1) {\n      moveToken(lastRoll)\n    }\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n  },[boardState])\n  \n\n  return (\n    <>\n    <h1>DICING WITH DEATH</h1>\n   <Board rollagains={rollagains} resizing={resizing} setResizing={setResizing} dimensions={dimensions} currentPlayer={currentPlayer} tokenSquares={tokenSquares} ladders={ladders} snakes={snakes}/>\n   <MessageBox clearMessage={clearMessage} winner={message.winner ? true : false} message={message.text} colour={message.colour} image={message.image} />\n \n       <div className=\"dice\">\n       <p id=\"cplayer\">Current player:<br/><span style={{\n         fontWeight: 900,\n         color: currentPlayer ? \"red\" : \"yellow\"\n       }}>{currentPlayer + 1}</span></p>\n\n   <Die player={0} currentPlayer={currentPlayer} disabled={dieEnabled && currentPlayer === 0? false : true} handleDieClick={handleDieClick} number={lastRoll } />\n   <Die player={1} currentPlayer={currentPlayer} disabled={dieEnabled && currentPlayer === 1 ? false : true} handleDieClick={handleDieClick} number={lastRoll } />\n   </div>\n   \n   \n   </>\n  );\n\n}\nexport default GameScreen","import './App.css';\n\nimport logo from './images/logo.svg'\n\nimport StartScreen from './components/startScreen.jsx'\nimport EndScreen from './components/endScreen.jsx'\nimport GameScreen from './components/gameScreen.jsx'\nimport { VolumeOff, VolumeUp } from '@material-ui/icons';\n\nimport { useState,useEffect } from 'react';\nimport {useWindowSize} from '@react-hook/window-size';\nimport Confetti from 'react-confetti'\n\nconst parse = require('csv-parse')\n\nconst App = () => {\n  const [width, height] = useWindowSize()\n\n  const [confetti,setConfetti] = useState(false)\n  const [gameState,setGameState] = useState(0)\n  const [firstResize,setFirstResize] = useState(false)\n  const [tokenSquares,setTokenSquares] = useState([0,0])\n  const [dieEnabled,setDieEnabled] = useState(true)\n  const [lastRoll,setLastRoll] = useState(1)\n  const [currentPlayer,setCurrentPlayer] = useState(0)\n  const [message,setMessage] = useState({})\n  const [messagePool,setMessagePool] = useState(0)\n  const [snakes,setSnakes] = useState(0)\n  const [ladders,setLadders] = useState(0)\n  const [rollagains,setRollagains] = useState(0)\n  const [resizing,setResizing] = useState(false)\n  const [playerCount,setPlayerCount] = useState(0)\n  const [boardState,setBoardState] = useState(0)\n  const [dimensions, setDimensions] = useState({\n    width: 600,\n    height: 600 * 1.6\n  });\n  const [soundOn,setSoundOn] = useState(true)\n\n  const startGame = (playerCount) => {\n    setPlayerCount(playerCount)\n    setGameState(1)\n  }\n\n  const restartGame = () => {\n    setConfetti(false)\n    setGameState(0)\n    setTokenSquares([0,0])\n    setDieEnabled(true)\n    setCurrentPlayer(0)\n    setMessage({})\n    setPlayerCount(0)\n    setBoardState(0)\n  }\n\n\n  const displayGameState = (gameState) => {\n    if (!messagePool) {\n      return (<><h1 className=\"title\">DICING WITH DEATH</h1>\n      <div id=\"instructions\" style={{\n        position: \"relative\",\n        height: \"20em\",\n        width: \"100%\"\n    }}>\n \n <div id=\"instructionsback\" style={{\n     position: \"absolute\",\n     top: 0,\n     width: \"100%\",\n     height: \"100%\",\n     opacity: 0.4,\n     zIndex: -1,\n      backgroundImage: `url(${logo})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\"\n    }}></div>\n    </div>\n      </>)\n    } else\n    if (gameState === 0) {\n      return <StartScreen messagePool={messagePool} startGame={startGame} />\n    } else\n    if (gameState === 1) {\n      return <GameScreen\n        setConfetti={setConfetti}\n        soundOn={soundOn}\n        setGameState={setGameState}\n        boardState={boardState}\n        setBoardState={setBoardState}\n        playerCount={playerCount}\n        tokenSquares={tokenSquares}\n        setTokenSquares={setTokenSquares}\n        dieEnabled={dieEnabled}\n        setDieEnabled={setDieEnabled}\n        lastRoll={lastRoll}\n        setLastRoll={setLastRoll}\n        currentPlayer={currentPlayer}\n        setCurrentPlayer={setCurrentPlayer}\n        message={message}\n        setMessage={setMessage}\n        messagePool={messagePool}\n        setMessagePool={setMessagePool}\n        resizing={resizing}\n        setResizing={setResizing}\n        dimensions={dimensions}\n        setDimensions={setDimensions}\n        firstResize={firstResize}\n        setFirstResize={setFirstResize}\n        snakes={snakes}\n        ladders={ladders}\n        rollagains={rollagains}\n        />\n    } else {\n      return <EndScreen messagePool={messagePool} restartGame={restartGame} />\n    }\n\n\n    \n  }\n\n  useEffect(() => {\n    \n\n      \n   \n      if (!messagePool) {\n\n        const loadMessageData = (parser,data) => {\n          data.split(\"\\n\").forEach(d => \n            parser.write(d)\n          )\n        }\n        \n\n        let messages = {}\n        const parser = parse({\n          delimiter: ','\n        })\n        parser.on('readable', function(){\n          let record\n          // eslint-disable-next-line\n          while (record = parser.read()) {\n\n            let type = record[0]\n            if (!messages[`${type}Messages`]){\n              messages[`${type}Messages`] = []\n            }\n            messages[`${type}Messages`].push([record[1],record[2],record[3]])\n          }\n        })\n    \n        parser.on('error', function(err){\n          console.error(err.message)\n        })\n\n        const csvurl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vT8mb7lgXCb2tO4IBhx7ERMI4s5KjVxFqiaV5SAZ52cMwsgcRnrTTx8nigACKv0o1cYA1c7woHGBvGF/pub?gid=0&single=true&output=csv\"\n        fetch(csvurl).then((response) => {\n          return response.text();\n        })\n        .then((csvdata) => {\n          \n          loadMessageData(parser,csvdata)\n          parser.end()\n\n          setMessagePool(messages)\n\n          const randomColor = (colors) => colors[Math.floor(Math.random() * colors.length)]\n\n          const randomMessageArray = (array,colour) => {\n            let i = array.length - 1;\n            for (; i > 0; i--) {\n              const j = Math.floor(Math.random() * (i + 1));\n              const temp = array[i];\n              array[i] = array[j];\n              array[j] = temp;\n            }\n            return array.map ( a => {\n              return {\n                text: a[0],\n                image: a[1],\n                slimage: a[2],\n                colour: colour,\n                rollagain: false\n              }\n            })\n          }\n          \n          \n          \n          if (!ladders) {\n\n            const ladderColors = [\"#654321\",\"grey\",\"black\"]\n            let ladderMessageColour = \"rgba(0, 128, 0, 0.8)\"\n            let ladderMessageSet = randomMessageArray(messages.ladderMessages,ladderMessageColour)\n\n            setLadders({\n              6: [16,randomColor(ladderColors),ladderMessageSet[0]],\n              10: [19,randomColor(ladderColors),ladderMessageSet[1]],\n              14: [23,randomColor(ladderColors),ladderMessageSet[2]],\n              22: [30,randomColor(ladderColors),ladderMessageSet[3]],\n              28: [36,randomColor(ladderColors),ladderMessageSet[4]],\n              31: [39,randomColor(ladderColors),ladderMessageSet[5]]\n            })\n          }\n\n          if (!snakes) {\n            const snakeColors = [\"yellow\",\"orange\",\"coral\",\"lightgreen\"]\n\n            let snakeMessageColour = \"rgba(255, 0, 0, 0.8)\"\n            let snakeMessageSet = randomMessageArray(messages.snakeMessages,snakeMessageColour)\n\n            setSnakes({  \n              7: [5,randomColor(snakeColors),snakeMessageSet[0]],\n              13: [2,randomColor(snakeColors),snakeMessageSet[1]],\n              20: [11,randomColor(snakeColors),snakeMessageSet[2]],\n              27: [17,randomColor(snakeColors),snakeMessageSet[3]],\n              29: [21,randomColor(snakeColors),snakeMessageSet[4]],\n              37: [35,randomColor(snakeColors),snakeMessageSet[5]],\n              38: [32,randomColor(snakeColors),snakeMessageSet[6]],\n            })\n          }\n          \n          if (!rollagains)  {\n            let rollagainMessageColour = \"rgba(255, 165, 0, 0.8)\"\n            let rollagainMessageSet = randomMessageArray(messages.rollagainMessages,rollagainMessageColour)\n\n\n            setRollagains({  \n              2: [2,rollagainMessageSet[0]],\n              4: [2,rollagainMessageSet[1]],\n              8: [2,rollagainMessageSet[2]],\n              12: [2,rollagainMessageSet[3]],\n              17: [2,rollagainMessageSet[4]],\n            })\n          }\n          \n          \n        })\n      }\n      let imagesToPreload = [\n        \"ladder1.png\",\n        \"neg-4-100-min.png\",\n        \"pos-antibody-100-min.png\",\n        \"pos-tablets-100-min.png\",\n        \"ra-flowers-250-min.png\",\n        \"ladder2.png\",\n        \"neg-4-250-min.png\",\n        \"pos-antibody-250-min.png\",\n        \"pos-tablets-250-min.png\",\n        \"ra-grapes-100-min.png\",\n        \"neg-1-100-min.png\",\n        \"neg-5-100-min.png\",\n        \"pos-meds-100-min.png\",\n        \"ra-bear-100-min.png\",\n        \"ra-grapes-250-min.png\",\n        \"neg-1-250-min.png\",\n        \"neg-5-250-min.png\",\n        \"pos-meds-250-min.png\",\n        \"ra-bear-250-min.png\",    \n        \"ra-sneakers-100-min.png\",\n        \"neg-2-100-min.png\",      \n        \"neg-6-100-min.png\",\n        \"pos-soap-100-min.png\",\n        \"ra-bear-500-min.png\",\n        \"ra-sneakers-250-min.png\",\n        \"neg-2-250-min.png\",\n        \"neg-6-250-min.png\",\n        \"pos-soap-250-min.png\",\n        \"ra-dummy-100-min.png\",\n        \"snake1.png\",\n        \"neg-3-100-min.png\",\n        \"pos-antibiotics-100-min.png\",\n        \"pos-syringe-100-min.png\",\n        \"ra-dummy-250-min.png\",\n        \"snake2.png\",\n        \"neg-3-250-min.png\",\n        \"pos-antibiotics-250-min.png\",\n        \"pos-syringe-250-min.png\",\n        \"ra-flowers-100-min.png\"\n      ]\n      imagesToPreload.forEach(i => {\n        const newImage = new Image();\n        newImage.src = window.location.href + `images/${i}`;\n        window[i] = newImage;\n      })\n        \n \n\n    \n    \n  },[messagePool,setMessagePool,ladders,snakes,rollagains])\n\n  const soundToggle = () => {\n    setSoundOn(soundOn ? false : true)\n  }\n\n  return (\n    <>\n    <div id=\"container\" style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    }}>\n    {displayGameState(gameState)}\n    <div id=\"volumecontrol\" onClick={soundToggle}>\n      {\n        soundOn ?  <VolumeUp style={{ fontSize: 40 }}  /> : <VolumeOff style={{ fontSize: 40 }}  />\n      }\n\n    </div>\n \n    </div>\n      \n       {confetti ? \n        <div id=\"confetti\" style={{zIndex: 50}}>\n     <Confetti\n       width={width}\n       height={height}\n     />      </div>\n      : \"\"}\n     </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}